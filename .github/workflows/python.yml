name: Deploy Python (FastAPI → EC2:8000 via screen)

on:
  push:
    branches: [ "master" ]
    paths:
      - "python/**"
      - ".github/workflows/python.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare target directory on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p /home/ubuntu/python/logs

      - name: Upload Python source to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "python/*"
          target: "/home/ubuntu/python"
          overwrite: true
          strip_components: 1

      - name: Restart FastAPI with screen
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euo pipefail

            APP_DIR="/home/ubuntu/python"
            VENV_DIR="/home/ubuntu/python/venv"
            SESSION="python-server"
            PORT="8000"
            LOG_DIR="/home/ubuntu/python/logs"
            LOG_FILE="${LOG_DIR}/python.screen.log"

            cd "$APP_DIR"

            # screen 설치 (최초 1회)
            if ! command -v screen >/dev/null 2>&1; then
              sudo apt-get update -y && sudo apt-get install -y screen
            fi

            # venv 생성 (없으면)
            if [ ! -d "$VENV_DIR" ]; then
              python3 -m venv "$VENV_DIR"
            fi

            # requirements 설치
            source "$VENV_DIR/bin/activate"
            pip install --upgrade pip
            if [ -f requirements.txt ]; then
              pip install -r requirements.txt
            fi

            mkdir -p "${LOG_DIR}"

            # 이전 세션 종료
            screen -S "$SESSION" -X quit || true

            # 백그라운드 실행
            screen -dmS "${SESSION}" -L -Logfile "${LOG_FILE}" \
              bash -lc "cd '${APP_DIR}' && source '${VENV_DIR}/bin/activate' && exec uvicorn main:app --host 0.0.0.0 --port=${PORT}"

            echo "[OK] Started FastAPI (uvicorn) on :${PORT} (screen: ${SESSION})"
            echo "Logs: ${LOG_FILE}"

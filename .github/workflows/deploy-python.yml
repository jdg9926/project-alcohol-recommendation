name: Deploy FastAPI to EC2

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 1. FastAPI 파이썬 코드 전송 (최신 main.py 등 포함)
      - name: Copy Python source code to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "./python"
          target: "/home/ubuntu/python"

      # 2. EC2에서 파이썬 서버 재실행 및 프로세스 보장
      - name: Run FastAPI server on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e  # 실패 시 즉시 종료

            cd /home/ubuntu/python

            # 가상환경 생성/업데이트
            if [ ! -d "venv" ]; then python3 -m venv venv; fi
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            # 환경변수 (필요시)
            export GOOGLE_APPLICATION_CREDENTIALS=/home/ubuntu/python/qna-ai-proejct-5fd3a30365dd.json

            # FastAPI 기존 세션 종료 (혹시라도 여러 번 떠있는 경우 모두 정리)
            screen -S fastapi-server -X quit || true
            pkill -f "uvicorn.*main:app" || true

            # 최신 main.py로 FastAPI 서버 새로 실행
            screen -dmS fastapi-server venv/bin/python3 -m uvicorn main:app --host=0.0.0.0 --port=8000

            # 실행확인 (디버깅용, 원하면 삭제 가능)
            sleep 2
            pgrep -af uvicorn || echo "uvicorn 프로세스가 실행되지 않음"
            screen -ls

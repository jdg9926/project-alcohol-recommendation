name: Deploy FastAPI to EC2

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Copy Python source code to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "./python"
          target: "/home/ubuntu"

      - name: Run FastAPI server on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e
            cd /home/ubuntu/python
            rm -rf venv
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            export GOOGLE_APPLICATION_CREDENTIALS=/home/ubuntu/python/qna-ai-proejct-5fd3a30365dd.json
            screen -S fastapi-server -X quit || true
            pkill -f "uvicorn.*main:app" || true
            screen -dmS fastapi-server venv/bin/python3 -m uvicorn main:app --host=0.0.0.0 --port=8000
            sleep 2
            # 이 부분에서 FastAPI가 정상 기동됐는지 판단
            if pgrep -af uvicorn | grep -q "main:app"; then
              echo "FastAPI started successfully"
              exit 0
            else
              echo "FastAPI failed to start"
              exit 1
            fi

      - name: Show FastAPI screen log if failed
        if: failure()
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "[에러 발생 시 FastAPI 서버 로그 확인]"
            if [ -f /home/ubuntu/python/screenlog.0 ]; then
              cat /home/ubuntu/python/screenlog.0
            else
              echo "No screenlog found"
            fi

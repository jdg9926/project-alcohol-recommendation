name: Deploy Backend (Spring Boot → EC2:8888 via screen)

on:
  push:
    branches: [ "master" ]
    paths:
      - "backEnd/**"
      - ".github/workflows/backend.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Make gradlew executable
        working-directory: backEnd
        run: chmod +x ./gradlew

      - name: Build (Gradle)
        working-directory: backEnd
        run: ./gradlew clean build -x test

      - name: Show build outputs
        run: ls -l backEnd/build/libs/

      - name: Prepare target directory on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            mkdir -p /home/ubuntu/backend/build/libs

      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "backEnd/build/libs/*.jar"
          target: "/home/ubuntu/backend/build/libs"
          overwrite: true
          strip_components: 3

      - name: Restart with screen
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -euo pipefail

            APP_DIR="/home/ubuntu/backend/build/libs"
            SESSION="spring-server"
            PORT="8888"
            LOG_DIR="/home/ubuntu/backend/logs"
            LOG_FILE="${LOG_DIR}/backend.screen.log"

            cd "$APP_DIR"

            # screen 설치(최초 1회)
            if ! command -v screen >/dev/null 2>&1; then
              sudo apt-get update -y && sudo apt-get install -y screen
            fi

            # 이전 세션 종료
            screen -S "$SESSION" -X quit || true

            # 최신 JAR 자동 선택
            JAR_FILE="$(ls -t ${JAR_GLOB} 2>/dev/null | head -n 1 || true)"
            if [[ -z "${JAR_FILE}" ]]; then
              echo "[ERROR] No JAR found in ${APP_DIR}"
              exit 1
            fi

            # 로그 디렉토리 준비
            mkdir -p "${LOG_DIR}"

            # 백그라운드 기동 (screen 로그 파일 지정)
            screen -dmS "${SESSION}" -L -Logfile "${LOG_FILE}" \
              bash -lc "java -jar '${JAR_FILE}' --server.port=${PORT}"

            echo "[OK] Started ${JAR_FILE} on :${PORT} (screen: ${SESSION})"
            echo "Logs: ${LOG_FILE}"

